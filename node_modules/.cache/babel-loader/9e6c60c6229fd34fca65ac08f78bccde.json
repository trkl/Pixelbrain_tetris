{"ast":null,"code":"import _classCallCheck from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/src/Resources/Games/Tetris/GameComponents/Floor.js\";\nimport React from \"react\";\nimport GameComponent from \"../../../../GameObject/GameComponent\";\nimport CollisionZone from \"../../../../GameObject/CollisionZone\";\nimport Game from \"../Game\";\nimport Vector from \"../../../../Vector/Vector\";\nimport EventManager from \"../../../../EventManager/EventManager\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\nexport function FloorCollision(that, collider) {\n  if (collider.object.name === that.name || collider.object === \"floor\") return;\n  if (collider.object.position.y < that.position.y) return;\n  console.log(\"that\", that);\n  console.log(\"collider\", collider.object.name);\n  console.log(collider.object.name);\n  var rigidBody = collider.object.rigidBody;\n  if (!rigidBody) return;\n  Game.instance.ableToJump = true;\n  rigidBody.gravity = 0;\n  rigidBody.velocity = new Vector([rigidBody.velocity.x, 0]);\n  rigidBody.acceleration = new Vector([rigidBody.acceleration.x, 0]);\n  rigidBody.force = new Vector(); // EventManager.instance.registerEvent(this.runnerCollisionEvent);\n}\n\nvar Floor =\n/*#__PURE__*/\nfunction (_GameComponent) {\n  _inherits(Floor, _GameComponent);\n\n  function Floor(props) {\n    var _this;\n\n    _classCallCheck(this, Floor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Floor).call(this, props));\n    _this.children = [React.createElement(CollisionZone, {\n      dimensions: _this.props.dimensions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })];\n\n    _this.collisionEvent = function (gameObject, force) {\n      return {\n        gameObject: gameObject,\n        physics: {\n          force: force\n        }\n      };\n    };\n\n    _this.handleCollision = function (collider) {\n      return FloorCollision(_assertThisInitialized(_assertThisInitialized(_this)), collider);\n    };\n\n    _this.initialPosition = _this.props.position;\n    return _this;\n  }\n\n  _createClass(Floor, [{\n    key: \"beforeFrameRender\",\n    value: function beforeFrameRender() {\n      this.position = this.initialPosition;\n    }\n  }]);\n\n  return Floor;\n}(GameComponent);\n\nexport default WithWorld(Floor);","map":{"version":3,"sources":["/home/hergeirs/Setri/ForritaVerkfrøði/Pixelbrain_tetris/src/Resources/Games/Tetris/GameComponents/Floor.js"],"names":["React","GameComponent","CollisionZone","Game","Vector","EventManager","WithWorld","FloorCollision","that","collider","object","name","position","y","console","log","rigidBody","instance","ableToJump","gravity","velocity","x","acceleration","force","Floor","props","children","dimensions","collisionEvent","gameObject","physics","handleCollision","initialPosition"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,SAAT,QAA0B,iCAA1B;AAEA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,QAA9B,EAAwC;AAC7C,MAAIA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,KAAyBH,IAAI,CAACG,IAA9B,IAAsCF,QAAQ,CAACC,MAAT,KAAoB,OAA9D,EAAuE;AACvE,MAAID,QAAQ,CAACC,MAAT,CAAgBE,QAAhB,CAAyBC,CAAzB,GAA6BL,IAAI,CAACI,QAAL,CAAcC,CAA/C,EAAkD;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,IAApB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,QAAQ,CAACC,MAAT,CAAgBC,IAAxC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACC,MAAT,CAAgBC,IAA5B;AAL6C,MAMvCK,SANuC,GAMzBP,QAAQ,CAACC,MANgB,CAMvCM,SANuC;AAO7C,MAAI,CAACA,SAAL,EAAgB;AAChBb,EAAAA,IAAI,CAACc,QAAL,CAAcC,UAAd,GAA2B,IAA3B;AACAF,EAAAA,SAAS,CAACG,OAAV,GAAoB,CAApB;AACAH,EAAAA,SAAS,CAACI,QAAV,GAAqB,IAAIhB,MAAJ,CAAW,CAACY,SAAS,CAACI,QAAV,CAAmBC,CAApB,EAAuB,CAAvB,CAAX,CAArB;AACAL,EAAAA,SAAS,CAACM,YAAV,GAAyB,IAAIlB,MAAJ,CAAW,CAACY,SAAS,CAACM,YAAV,CAAuBD,CAAxB,EAA2B,CAA3B,CAAX,CAAzB;AACAL,EAAAA,SAAS,CAACO,KAAV,GAAkB,IAAInB,MAAJ,EAAlB,CAZ6C,CAa7C;AACD;;IAEKoB,K;;;;;AAQJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AADiB,UAPnBC,QAOmB,GAPR,CAAC,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAE,MAAKD,KAAL,CAAWE,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAOQ;;AAAA,UALnBC,cAKmB,GALF,UAACC,UAAD,EAAaN,KAAb;AAAA,aAAwB;AACvCM,QAAAA,UAAU,EAAEA,UAD2B;AAEvCC,QAAAA,OAAO,EAAE;AAAEP,UAAAA,KAAK,EAALA;AAAF;AAF8B,OAAxB;AAAA,KAKE;;AAAA,UAOnBQ,eAPmB,GAOD,UAAAtB,QAAQ;AAAA,aAAIF,cAAc,wDAAOE,QAAP,CAAlB;AAAA,KAPP;;AAEjB,UAAKuB,eAAL,GAAuB,MAAKP,KAAL,CAAWb,QAAlC;AAFiB;AAGlB;;;;wCAMmB;AAClB,WAAKA,QAAL,GAAgB,KAAKoB,eAArB;AACD;;;;EAnBiB/B,a;;AAsBpB,eAAeK,SAAS,CAACkB,KAAD,CAAxB","sourcesContent":["import React from \"react\";\nimport GameComponent from \"../../../../GameObject/GameComponent\";\nimport CollisionZone from \"../../../../GameObject/CollisionZone\";\nimport Game from \"../Game\";\nimport Vector from \"../../../../Vector/Vector\";\nimport EventManager from \"../../../../EventManager/EventManager\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\n\nexport function FloorCollision(that, collider) {\n  if (collider.object.name === that.name || collider.object === \"floor\") return;\n  if (collider.object.position.y < that.position.y) return;\n  console.log(\"that\", that);\n  console.log(\"collider\", collider.object.name);\n  console.log(collider.object.name);\n  let { rigidBody } = collider.object;\n  if (!rigidBody) return;\n  Game.instance.ableToJump = true;\n  rigidBody.gravity = 0;\n  rigidBody.velocity = new Vector([rigidBody.velocity.x, 0]);\n  rigidBody.acceleration = new Vector([rigidBody.acceleration.x, 0]);\n  rigidBody.force = new Vector();\n  // EventManager.instance.registerEvent(this.runnerCollisionEvent);\n}\n\nclass Floor extends GameComponent {\n  children = [<CollisionZone dimensions={this.props.dimensions} />];\n\n  collisionEvent = (gameObject, force) => ({\n    gameObject: gameObject,\n    physics: { force }\n  });\n\n  constructor(props) {\n    super(props);\n    this.initialPosition = this.props.position;\n  }\n\n  runnerCollisionEvent;\n\n  handleCollision = collider => FloorCollision(this, collider);\n\n  beforeFrameRender() {\n    this.position = this.initialPosition;\n  }\n}\n\nexport default WithWorld(Floor);\n"]},"metadata":{},"sourceType":"module"}