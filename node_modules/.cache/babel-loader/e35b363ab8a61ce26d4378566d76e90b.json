{"ast":null,"code":"import _classCallCheck from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/src/Resources/Games/Tetris/GameComponents/Cube.js\";\nimport GameComponent from \"../../../../GameObject/GameComponent\";\nimport CollisionZone from \"../../../../GameObject/CollisionZone\";\nimport React from \"react\";\nimport Vector from \"../../../../Vector/Vector\";\nimport Sprite from \"../../../../GameComponents/Sprite\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\nimport RigidBody from \"../../../../GameObject/RigidBody\";\nimport { FloorCollision } from \"./Floor\";\n\nvar Cube =\n/*#__PURE__*/\nfunction (_GameComponent) {\n  _inherits(Cube, _GameComponent);\n\n  function Cube(props) {\n    var _this;\n\n    _classCallCheck(this, Cube);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cube).call(this, props));\n    _this.size = new Vector([10, 10]);\n\n    _this.handleCollision = function (collider) {\n      if (_this.handled || _this.props.name === collider.collisionZone.name) return;\n      FloorCollision(_assertThisInitialized(_assertThisInitialized(_this)), collider);\n\n      _this.props.parent.props.keyboard.unsubscribe(_assertThisInitialized(_assertThisInitialized(_this)));\n\n      _this.props.parent.parent.addCubes();\n    };\n\n    _this.rigidBody = _this.props.parent.rigidBody;\n\n    _this.props.parent.add(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.offset = _this.props.offset ? _this.props.offset : new Vector();\n    _this.children = [React.createElement(Sprite, {\n      imagesource: \"merki.png\",\n      size: _this.size,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(CollisionZone, {\n      offset: _this.offset,\n      dimensions: _this.size,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })];\n    return _this;\n  }\n\n  return Cube;\n}(GameComponent);\n\nexport default WithWorld(Cube);","map":{"version":3,"sources":["/home/hergeirs/Setri/ForritaVerkfrøði/Pixelbrain_tetris/src/Resources/Games/Tetris/GameComponents/Cube.js"],"names":["GameComponent","CollisionZone","React","Vector","Sprite","WithWorld","RigidBody","FloorCollision","Cube","props","size","handleCollision","collider","handled","name","collisionZone","parent","keyboard","unsubscribe","addCubes","rigidBody","add","offset","children"],"mappings":";;;;;;AAAA,OAAOA,aAAP,MAA0B,sCAA1B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAASC,cAAT,QAA+B,SAA/B;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AADiB,UAUnBC,IAVmB,GAUZ,IAAIP,MAAJ,CAAW,CAAC,EAAD,EAAK,EAAL,CAAX,CAVY;;AAAA,UAYnBQ,eAZmB,GAYD,UAAAC,QAAQ,EAAI;AAC5B,UAAI,MAAKC,OAAL,IAAgB,MAAKJ,KAAL,CAAWK,IAAX,KAAoBF,QAAQ,CAACG,aAAT,CAAuBD,IAA/D,EAAqE;AAErEP,MAAAA,cAAc,wDAAOK,QAAP,CAAd;;AACA,YAAKH,KAAL,CAAWO,MAAX,CAAkBP,KAAlB,CAAwBQ,QAAxB,CAAiCC,WAAjC;;AACA,YAAKT,KAAL,CAAWO,MAAX,CAAkBA,MAAlB,CAAyBG,QAAzB;AACD,KAlBkB;;AAEjB,UAAKC,SAAL,GAAiB,MAAKX,KAAL,CAAWO,MAAX,CAAkBI,SAAnC;;AACA,UAAKX,KAAL,CAAWO,MAAX,CAAkBK,GAAlB;;AACA,UAAKC,MAAL,GAAc,MAAKb,KAAL,CAAWa,MAAX,GAAoB,MAAKb,KAAL,CAAWa,MAA/B,GAAwC,IAAInB,MAAJ,EAAtD;AACA,UAAKoB,QAAL,GAAgB,CACd,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,WAApB;AAAgC,MAAA,IAAI,EAAE,MAAKb,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc,EAEd,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAE,MAAKY,MAA5B;AAAoC,MAAA,UAAU,EAAE,MAAKZ,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFc,CAAhB;AALiB;AASlB;;;EAVgBV,a;;AAsBnB,eAAeK,SAAS,CAACG,IAAD,CAAxB","sourcesContent":["import GameComponent from \"../../../../GameObject/GameComponent\";\nimport CollisionZone from \"../../../../GameObject/CollisionZone\";\nimport React from \"react\";\nimport Vector from \"../../../../Vector/Vector\";\nimport Sprite from \"../../../../GameComponents/Sprite\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\nimport RigidBody from \"../../../../GameObject/RigidBody\";\nimport { FloorCollision } from \"./Floor\";\n\nclass Cube extends GameComponent {\n  constructor(props) {\n    super(props);\n    this.rigidBody = this.props.parent.rigidBody;\n    this.props.parent.add(this);\n    this.offset = this.props.offset ? this.props.offset : new Vector();\n    this.children = [\n      <Sprite imagesource=\"merki.png\" size={this.size} />,\n      <CollisionZone offset={this.offset} dimensions={this.size} />\n    ];\n  }\n  size = new Vector([10, 10]);\n\n  handleCollision = collider => {\n    if (this.handled || this.props.name === collider.collisionZone.name) return;\n\n    FloorCollision(this, collider);\n    this.props.parent.props.keyboard.unsubscribe(this);\n    this.props.parent.parent.addCubes();\n  };\n}\n\nexport default WithWorld(Cube);\n"]},"metadata":{},"sourceType":"module"}