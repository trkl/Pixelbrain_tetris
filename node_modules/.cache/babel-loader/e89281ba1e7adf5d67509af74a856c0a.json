{"ast":null,"code":"import _classCallCheck from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/hergeirs/Setri/ForritaVerkfr\\xF8\\xF0i/Pixelbrain_tetris/src/Resources/Games/Tetris/GameComponents/Floor.js\";\nimport React from \"react\";\nimport GameComponent from \"../../../../GameObject/GameComponent\";\nimport CollisionZone from \"../../../../GameObject/CollisionZone\";\nimport Game from \"../Game\";\nimport Vector from \"../../../../Vector/Vector\";\nimport EventManager from \"../../../../EventManager/EventManager\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\nexport function FloorCollision(collider) {\n  if (collider.object.name === this.name) return;\n  var rigidBody = collider.object.rigidBody;\n  Game.instance.ableToJump = true;\n  rigidBody.velocity = new Vector([rigidBody.velocity.x, 0]);\n  this.runnerCollisionEvent = this.collisionEvent(collider.object, new Vector([0, -rigidBody.weight * 9.82 * rigidBody.gravity]));\n  rigidBody.force = new Vector();\n  rigidBody.gravity = 0; // EventManager.instance.registerEvent(this.runnerCollisionEvent);\n\n  rigidBody.acceleration = new Vector([rigidBody.acceleration.x, 0]);\n}\n\nvar Floor =\n/*#__PURE__*/\nfunction (_GameComponent) {\n  _inherits(Floor, _GameComponent);\n\n  function Floor(props) {\n    var _this;\n\n    _classCallCheck(this, Floor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Floor).call(this, props));\n    _this.children = [React.createElement(CollisionZone, {\n      dimensions: _this.props.dimensions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })];\n\n    _this.collisionEvent = function (gameObject, force) {\n      return {\n        gameObject: gameObject,\n        physics: {\n          force: force\n        }\n      };\n    };\n\n    _this.handleCollision = function (collider) {\n      FloorCollision.bind(_assertThisInitialized(_assertThisInitialized(_this)))(collider);\n      collider.object.position.y = _this.position.y;\n    };\n\n    _this.initialPosition = _this.props.position;\n    return _this;\n  }\n\n  _createClass(Floor, [{\n    key: \"beforeFrameRender\",\n    value: function beforeFrameRender() {\n      this.position = this.initialPosition;\n    }\n  }]);\n\n  return Floor;\n}(GameComponent);\n\nexport default WithWorld(Floor);","map":{"version":3,"sources":["/home/hergeirs/Setri/ForritaVerkfrøði/Pixelbrain_tetris/src/Resources/Games/Tetris/GameComponents/Floor.js"],"names":["React","GameComponent","CollisionZone","Game","Vector","EventManager","WithWorld","FloorCollision","collider","object","name","rigidBody","instance","ableToJump","velocity","x","runnerCollisionEvent","collisionEvent","weight","gravity","force","acceleration","Floor","props","children","dimensions","gameObject","physics","handleCollision","bind","position","y","initialPosition"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,SAAT,QAA0B,iCAA1B;AAEA,OAAO,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AACvC,MAAIA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,KAAyB,KAAKA,IAAlC,EAAwC;AADD,MAE/BC,SAF+B,GAEjBH,QAAQ,CAACC,MAFQ,CAE/BE,SAF+B;AAGvCR,EAAAA,IAAI,CAACS,QAAL,CAAcC,UAAd,GAA2B,IAA3B;AAEAF,EAAAA,SAAS,CAACG,QAAV,GAAqB,IAAIV,MAAJ,CAAW,CAACO,SAAS,CAACG,QAAV,CAAmBC,CAApB,EAAuB,CAAvB,CAAX,CAArB;AACA,OAAKC,oBAAL,GAA4B,KAAKC,cAAL,CAC1BT,QAAQ,CAACC,MADiB,EAE1B,IAAIL,MAAJ,CAAW,CAAC,CAAD,EAAI,CAACO,SAAS,CAACO,MAAX,GAAoB,IAApB,GAA2BP,SAAS,CAACQ,OAAzC,CAAX,CAF0B,CAA5B;AAIAR,EAAAA,SAAS,CAACS,KAAV,GAAkB,IAAIhB,MAAJ,EAAlB;AACAO,EAAAA,SAAS,CAACQ,OAAV,GAAoB,CAApB,CAXuC,CAYvC;;AACAR,EAAAA,SAAS,CAACU,YAAV,GAAyB,IAAIjB,MAAJ,CAAW,CAACO,SAAS,CAACU,YAAV,CAAuBN,CAAxB,EAA2B,CAA3B,CAAX,CAAzB;AACD;;IAEKO,K;;;;;AAQJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AADiB,UAPnBC,QAOmB,GAPR,CAAC,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAE,MAAKD,KAAL,CAAWE,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAOQ;;AAAA,UALnBR,cAKmB,GALF,UAACS,UAAD,EAAaN,KAAb;AAAA,aAAwB;AACvCM,QAAAA,UAAU,EAAEA,UAD2B;AAEvCC,QAAAA,OAAO,EAAE;AAAEP,UAAAA,KAAK,EAALA;AAAF;AAF8B,OAAxB;AAAA,KAKE;;AAAA,UAOnBQ,eAPmB,GAOD,UAAApB,QAAQ,EAAI;AAC5BD,MAAAA,cAAc,CAACsB,IAAf,wDAA0BrB,QAA1B;AACAA,MAAAA,QAAQ,CAACC,MAAT,CAAgBqB,QAAhB,CAAyBC,CAAzB,GAA6B,MAAKD,QAAL,CAAcC,CAA3C;AACD,KAVkB;;AAEjB,UAAKC,eAAL,GAAuB,MAAKT,KAAL,CAAWO,QAAlC;AAFiB;AAGlB;;;;wCASmB;AAClB,WAAKA,QAAL,GAAgB,KAAKE,eAArB;AACD;;;;EAtBiB/B,a;;AAyBpB,eAAeK,SAAS,CAACgB,KAAD,CAAxB","sourcesContent":["import React from \"react\";\nimport GameComponent from \"../../../../GameObject/GameComponent\";\nimport CollisionZone from \"../../../../GameObject/CollisionZone\";\nimport Game from \"../Game\";\nimport Vector from \"../../../../Vector/Vector\";\nimport EventManager from \"../../../../EventManager/EventManager\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\n\nexport function FloorCollision(collider) {\n  if (collider.object.name === this.name) return;\n  const { rigidBody } = collider.object;\n  Game.instance.ableToJump = true;\n\n  rigidBody.velocity = new Vector([rigidBody.velocity.x, 0]);\n  this.runnerCollisionEvent = this.collisionEvent(\n    collider.object,\n    new Vector([0, -rigidBody.weight * 9.82 * rigidBody.gravity])\n  );\n  rigidBody.force = new Vector();\n  rigidBody.gravity = 0;\n  // EventManager.instance.registerEvent(this.runnerCollisionEvent);\n  rigidBody.acceleration = new Vector([rigidBody.acceleration.x, 0]);\n}\n\nclass Floor extends GameComponent {\n  children = [<CollisionZone dimensions={this.props.dimensions} />];\n\n  collisionEvent = (gameObject, force) => ({\n    gameObject: gameObject,\n    physics: { force }\n  });\n\n  constructor(props) {\n    super(props);\n    this.initialPosition = this.props.position;\n  }\n\n  runnerCollisionEvent;\n\n  handleCollision = collider => {\n    FloorCollision.bind(this)(collider);\n    collider.object.position.y = this.position.y;\n  };\n\n  beforeFrameRender() {\n    this.position = this.initialPosition;\n  }\n}\n\nexport default WithWorld(Floor);\n"]},"metadata":{},"sourceType":"module"}